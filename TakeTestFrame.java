/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TechQuiz.gui;

import TechQuiz.dao.PerformanceDAO;
import TechQuiz.dao.QuestionDAO;
import TechQuiz.pojo.AnswerPojo;
import TechQuiz.pojo.AnswerStorePojo;
import TechQuiz.pojo.ExamPojo;
import TechQuiz.pojo.PerformancePojo;
import TechQuiz.pojo.QuestionPojo;
import TechQuiz.pojo.QuestionStore;
import TechQuiz.pojo.UserProfile;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;

import java.util.ArrayList;
import javax.swing.JOptionPane;


public class TakeTestFrame extends javax.swing.JFrame {

   private ExamPojo exam;
   private QuestionStore qstore;
   private AnswerStorePojo astore;
   private int qno,pos=0;
    public TakeTestFrame() {
        initComponents();
        qstore=new QuestionStore();
        astore=new AnswerStorePojo();
        qno=1;
        lblQno.setText(lblQno.getText()+qno);
    }
    public TakeTestFrame(ExamPojo exam)
    {
    this();
    this.exam=exam;
    lblTitle.setText(exam.getLanguage().toUpperCase()+"PAPER");
    loadQuestions();
    showQuestions();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblQno = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jrOption1 = new javax.swing.JRadioButton();
        jrOption4 = new javax.swing.JRadioButton();
        jrOption3 = new javax.swing.JRadioButton();
        jrOption2 = new javax.swing.JRadioButton();
        lblLogout = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 102, 204));
        lblTitle.setText(" JAVA PAPER");

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\V.S\\Desktop\\Java\\onlineexam\\questionpaper4.jpg")); // NOI18N
        jLabel2.setText("jLabel2");

        lblQno.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblQno.setForeground(new java.awt.Color(0, 102, 204));
        lblQno.setText("Question no:1");

        txtQuestion.setColumns(20);
        txtQuestion.setRows(5);
        jScrollPane1.setViewportView(txtQuestion);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btnNext.setBackground(new java.awt.Color(0, 0, 0));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnNext.setForeground(new java.awt.Color(0, 102, 204));
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setBackground(new java.awt.Color(0, 0, 0));
        btnPrevious.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPrevious.setForeground(new java.awt.Color(0, 102, 204));
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnDone.setBackground(new java.awt.Color(0, 0, 0));
        btnDone.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDone.setForeground(new java.awt.Color(0, 102, 204));
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(0, 0, 0));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(0, 102, 204));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jrOption1.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrOption1);
        jrOption1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jrOption1.setForeground(new java.awt.Color(51, 153, 255));
        jrOption1.setText("Interface");

        jrOption4.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrOption4);
        jrOption4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jrOption4.setForeground(new java.awt.Color(51, 153, 255));
        jrOption4.setText("Double");

        jrOption3.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrOption3);
        jrOption3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jrOption3.setForeground(new java.awt.Color(51, 153, 255));
        jrOption3.setText("Signed");

        jrOption2.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrOption2);
        jrOption2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jrOption2.setForeground(new java.awt.Color(51, 153, 255));
        jrOption2.setText("String");

        lblLogout.setBackground(new java.awt.Color(0, 0, 0));
        lblLogout.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblLogout.setForeground(new java.awt.Color(0, 102, 204));
        lblLogout.setText("Logout");
        lblLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblLogoutMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(btnNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPrevious)
                        .addGap(58, 58, 58)
                        .addComponent(btnCancel)
                        .addGap(49, 49, 49)
                        .addComponent(btnDone))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(lblQno, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jrOption1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jrOption3, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrOption4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jrOption2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblLogout, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addGap(14, 14, 14)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQno, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrOption1)
                    .addComponent(jrOption2))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrOption4)
                    .addComponent(jrOption3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrevious)
                    .addComponent(btnDone)
                    .addComponent(btnNext)
                    .addComponent(btnCancel))
                .addGap(79, 79, 79))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
       String chosenAnswer=getUserAnswer();
       if(chosenAnswer!=null)
       {
           QuestionPojo question=qstore.getQuestion(pos);
           String correctAnswer=question.getCorrectAnswer();
           AnswerPojo newanswer=new AnswerPojo(exam.getExamId(),exam.getLanguage(),qno,chosenAnswer,correctAnswer);
           System.out.println(newanswer);
           AnswerPojo answer=astore.getAnswerByQno(qno);
           if(answer==null)
               astore.addAnswer(newanswer);
           else{
               if(newanswer.getChosenAnswer().equals(answer.getChosenAnswer())==false)
               {
                   int apos=astore.removeAnswer(answer);
                   astore.setAnswerAt(apos, newanswer);
               }
           }
       }
        pos++;
    if(pos>=qstore.getCount())
    {
        pos=0;
       
    }
    qno++;
    if(qno>qstore.getCount())
        qno=1;
    lblQno.setText("Question no:"+qno);
    showQuestions();
    
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
       String chosenAnswer=getUserAnswer();
       if(chosenAnswer!=null)
       {
           QuestionPojo question=qstore.getQuestion(pos);
           String correctAnswer=question.getCorrectAnswer();
           AnswerPojo newanswer=new AnswerPojo(exam.getExamId(),exam.getLanguage(),qno,chosenAnswer,correctAnswer);
           System.out.println(newanswer);
           AnswerPojo answer=astore.getAnswerByQno(qno);
           if(answer==null)
               astore.addAnswer(newanswer);
           else{
               if(newanswer.getChosenAnswer().equals(answer.getChosenAnswer())==false)
               {
                   int apos=astore.removeAnswer(answer);
                   astore.setAnswerAt(apos, newanswer);   
               }
           }
       }
        pos--;
    if(pos<0)
    {
        pos= qstore.getCount()-1;
       
    }
    qno--;
    if(qno<=0)
        qno=qstore.getCount()-1;
    
    lblQno.setText("Question no:"+qno);
    showQuestions();
    
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
       String chosenAnswer=getUserAnswer();
       if(chosenAnswer!=null)
       {
           QuestionPojo question=qstore.getQuestion(pos);
           String correctAnswer=question.getCorrectAnswer();
           AnswerPojo newanswer=new AnswerPojo(exam.getExamId(),exam.getLanguage(),qno,chosenAnswer,correctAnswer);
           System.out.println(newanswer);
           AnswerPojo answer=astore.getAnswerByQno(qno);
           if(answer==null)
               astore.addAnswer(newanswer);
           else{
               if(newanswer.getChosenAnswer().equals(answer.getChosenAnswer())==false)
               {
                   int apos=astore.removeAnswer(answer);
                   astore.setAnswerAt(apos, newanswer);
               }
           }
       }
       int right=0,wrong=0;
       for(QuestionPojo question:qstore.getAllQuestions())
       {
        int qno=question.getQno();
        AnswerPojo answer=astore.getAnswerByQno(qno);
        if(answer==null)
            continue;
        else{
           String chosenAnswer1=answer.getChosenAnswer();
           String correctAnswer=answer.getCorrectAnswer();
            
           if(chosenAnswer1.equals(correctAnswer))
               
               ++right;
           
           else
               ++wrong;
               
        }
       } 
       String reportCard="Total Questions:"+qstore.getCount();
       reportCard+="\nRight Answers:"+right;
       reportCard+="\nWrong Answers:"+wrong;
       reportCard+="\nUnattempted"+" "+(qstore.getCount()-(right+wrong));
       JOptionPane.showMessageDialog(null, reportCard,"Your Result!",JOptionPane.INFORMATION_MESSAGE);
       try
       {
       PerformancePojo performance=new PerformancePojo(exam.getExamId(),exam.getLanguage(),UserProfile.getUsername(),right,wrong,(qstore.getCount()-(right+wrong)),(double)right/qstore.getCount()*100);
       PerformanceDAO.addPerformance(performance);
       JOptionPane.showMessageDialog(null,"Your Performance has been Successfully added to the Database","Performance Added",JOptionPane.INFORMATION_MESSAGE);
       ChoosePaperFrame paperFrame=new ChoosePaperFrame();
       paperFrame.setVisible(true);
       this.dispose();
       }
      catch(SQLException ex)
      {
         ex.printStackTrace();
    }//GEN-LAST:event_btnDoneActionPerformed
    
    }
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void lblLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseClicked
        LoginFrame loginframe=new LoginFrame();
        loginframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblLogoutMouseClicked

    private void lblLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseEntered
        lblLogout.setForeground(Color.WHITE);
        Font f=new Font("Tahoma",Font.ITALIC,12);
        lblLogout.setFont(f);
    }//GEN-LAST:event_lblLogoutMouseEntered

    private void lblLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseExited
        lblLogout.setForeground(new Color(253,153,0));
        Font f=new Font("Tahoma",Font.BOLD,12);
        lblLogout.setFont(f);
    }//GEN-LAST:event_lblLogoutMouseExited


    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jrOption1;
    private javax.swing.JRadioButton jrOption2;
    private javax.swing.JRadioButton jrOption3;
    private javax.swing.JRadioButton jrOption4;
    private javax.swing.JLabel lblLogout;
    private javax.swing.JLabel lblQno;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables
public void loadQuestions()
{
try
{
    ArrayList<QuestionPojo> questionList=QuestionDAO.getQuestionByExamId(exam.getExamId());
    for(QuestionPojo obj:questionList)
    {
        qstore.addQuestion(obj);
    }
}
catch(SQLException sq)
            {
            sq.printStackTrace();
            }
}
public void showQuestions(){
 QuestionPojo question=qstore.getQuestion(pos);
 buttonGroup1.clearSelection();
 txtQuestion.setText(question.getQuestion());
 jrOption1.setText(question.getAnswer1());
  jrOption2.setText(question.getAnswer2());
   jrOption3.setText(question.getAnswer3());
    jrOption4.setText(question.getAnswer4());
    AnswerPojo answer=astore.getAnswerByQno(qno);
    if(answer==null)
        return;
    String chosenAnswer=answer.getChosenAnswer();
    switch(chosenAnswer){
    case "Answer1":
    jrOption1.setSelected(true);
    break;
    case "Answer2":
    jrOption2.setSelected(true);
    break;
    case "Answer3":
    jrOption3.setSelected(true);
    break;
    case "Answer4":
    jrOption4.setSelected(true);
    break;
}
    
    
    
    
}
public String getUserAnswer()
{
    if(jrOption1.isSelected())
        return "Answer1";
    else if(jrOption2.isSelected())
        return "Answer2";
    else if(jrOption3.isSelected())
        return "Answer3";
    else if(jrOption4.isSelected())
        return "Answer4";
    else
        return null;
}









}
